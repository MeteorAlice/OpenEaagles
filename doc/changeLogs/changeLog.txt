================================================================================
Changes since v14.09
================================================================================

--------------------------------------------------------------------------------
general

- renamed the 'vehicles' library to 'dynamics' to more correctly reflect
  provided functionality

- added 'override' context keyword throughout entire framework

- adding 'nullptr' context keyword throughout entire framework

- added more 'std::' namespace qualifiers to math and string functions

- The shared pointer class template (SPtr<>) that was defined inside Object's
  scope has been moved outside and into 'Basic' namespace.  It has also been
  renamed to 'safe_ptr<>'.

  This was done for several reasons:
     1) Declutter the Object class
     2) To more clearly indicate the functionality provided by this implementation
        of a shared pointer.  Namely, it intellegently manages ref-based
        Objects AND is also thread-proof (meaning, multiple threads can access the
        same shared pointer object safely.

  To adjust to the new style, search and replace all 'SPtr<>' templates with
  'Basic::safe_ptr<>' - for example:

  'SPtr<RfSignature>' would be replaced by 'Basic::safe_ptr<RfSignature>'

--------------------------------------------------------------------------------
basic

   Component class: removed unnecessary casting checks in several places (actually they were incorrect)

   Functions.h/cpp: these files defined several classes including Function, Func1, Func2, Func3,
                    Func4, Func5 and Polynomial.  The Function class has been separated into its
                    own .h/cpp.

   Tables.h/cpp: these files defined several classes including Table, Table1, Table2, Table3,
                 Table4 and Table5.  Table class itself defined several static methods for
                 performing linear function interpolation (LFI).  The Table class has been
                 separated into its own .h/cpp and the LFI algoithms are now defined in the
                 lfi-util.h header, within the 'lft::' namespace.

   Tables & Functions: all of the Table and Function classes plus LFI algorithms have now be moved
                       into a new functors subdirectory of basic.  Technically, these are not
                       C++ functors, but role they serve is very functor-like.

--------------------------------------------------------------------------------
basicGL


--------------------------------------------------------------------------------
dis


--------------------------------------------------------------------------------
dynamics



--------------------------------------------------------------------------------
gui-glut


--------------------------------------------------------------------------------
instruments


--------------------------------------------------------------------------------
maps


--------------------------------------------------------------------------------
otw

--------------------------------------------------------------------------------
recorder


--------------------------------------------------------------------------------
simulation

   - DynamicsModels.h used to include class definitions for both 'DynamicsModel' and 'AerodynamicsModel'.
     'AerodynamicsModel' class has been separated and defined in file 'AerodynamicsModel.h'
     As a result, the file 'DynamicsModels.h' has been renamed to proper 'DynamicsModel.h' as it now
     only defines the 'DynamicsModel' class.

   - Aerodynamics.h and SpaceDynamics.h now both reside in the simulation/dynamics directory.


--------------------------------------------------------------------------------
terrain
 

--------------------------------------------------------------------------------
